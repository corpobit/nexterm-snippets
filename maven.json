{
    "version": 1,
    "groups": [
        {
            "name": "Maven Build Commands",
            "description": "Commands for building and compiling Maven projects"
        },
        {
            "name": "Maven Dependency Management",
            "description": "Commands for managing project dependencies"
        },
        {
            "name": "Maven Project Information",
            "description": "Commands for retrieving project information"
        },
        {
            "name": "Maven Repository Management",
            "description": "Commands for managing Maven repositories"
        },
        {
            "name": "Maven Plugin Management",
            "description": "Commands for working with Maven plugins"
        },
        {
            "name": "Maven Lifecycle Management",
            "description": "Commands for managing Maven lifecycle phases"
        },
        {
            "name": "Maven Testing Commands",
            "description": "Commands for running and managing tests"
        },
        {
            "name": "Maven Archetype Commands",
            "description": "Commands for creating projects from archetypes"
        }
    ],
    "snippets": [
        {
            "name": "Clean Project",
            "command": "mvn clean",
            "description": "Removes all files generated by the previous build",
            "groupName": "Maven Build Commands",
            "variables": []
        },
        {
            "name": "Compile Project",
            "command": "mvn compile",
            "description": "Compiles the source code of the project",
            "groupName": "Maven Build Commands",
            "variables": []
        },
        {
            "name": "Package Project",
            "command": "mvn package",
            "description": "Packages the compiled code into a distributable format (e.g., JAR, WAR)",
            "groupName": "Maven Build Commands",
            "variables": []
        },
        {
            "name": "Install Project",
            "command": "mvn install",
            "description": "Installs the packaged artifact into the local repository",
            "groupName": "Maven Build Commands",
            "variables": []
        },
        {
            "name": "Deploy Artifact",
            "command": "mvn deploy",
            "description": "Deploys the artifact to a remote repository",
            "groupName": "Maven Build Commands",
            "variables": []
        },
        {
            "name": "Build and Skip Tests",
            "command": "mvn clean install -DskipTests",
            "description": "Builds the project and skips running tests",
            "groupName": "Maven Build Commands",
            "variables": []
        },
        {
            "name": "Run Specific Profile",
            "command": "mvn clean install -P {profile}",
            "description": "Builds the project using a specific profile",
            "groupName": "Maven Build Commands",
            "variables": [
                {
                    "name": "profile",
                    "description": "Name of the profile to activate",
                    "default": ""
                }
            ]
        },
        {
            "name": "Resolve Dependencies",
            "command": "mvn dependency:resolve",
            "description": "Resolves all dependencies for the project",
            "groupName": "Maven Dependency Management",
            "variables": []
        },
        {
            "name": "List Dependencies",
            "command": "mvn dependency:list",
            "description": "Lists all dependencies for the project",
            "groupName": "Maven Dependency Management",
            "variables": []
        },
        {
            "name": "Download Dependency Sources",
            "command": "mvn dependency:sources",
            "description": "Downloads source code for all dependencies",
            "groupName": "Maven Dependency Management",
            "variables": []
        },
        {
            "name": "Copy Dependencies",
            "command": "mvn dependency:copy-dependencies",
            "description": "Copies all dependencies to the target/dependency directory",
            "groupName": "Maven Dependency Management",
            "variables": []
        },
        {
            "name": "Analyze Dependencies",
            "command": "mvn dependency:analyze",
            "description": "Analyzes dependencies for unused or undeclared dependencies",
            "groupName": "Maven Dependency Management",
            "variables": []
        },
        {
            "name": "Tree of Dependencies",
            "command": "mvn dependency:tree",
            "description": "Displays the dependency tree for the project",
            "groupName": "Maven Dependency Management",
            "variables": []
        },
        {
            "name": "Get Effective POM",
            "command": "mvn help:effective-pom",
            "description": "Displays the effective POM file after inheritance and interpolation",
            "groupName": "Maven Project Information",
            "variables": []
        },
        {
            "name": "Display Project Details",
            "command": "mvn help:describe",
            "description": "Displays details about the project or a specific plugin",
            "groupName": "Maven Project Information",
            "variables": []
        },
        {
            "name": "Get System Information",
            "command": "mvn help:system",
            "description": "Displays system properties and environment variables",
            "groupName": "Maven Project Information",
            "variables": []
        },
        {
            "name": "List Available Plugins",
            "command": "mvn help:describe -Dcmd=plugin",
            "description": "Lists all available Maven plugins",
            "groupName": "Maven Project Information",
            "variables": []
        },
        {
            "name": "Purge Local Repository",
            "command": "mvn dependency:purge-local-repository",
            "description": "Removes dependencies from the local repository and re-downloads them",
            "groupName": "Maven Repository Management",
            "variables": []
        },
        {
            "name": "Install File to Repository",
            "command": "mvn install:install-file -Dfile={file_path} -DgroupId={group_id} -DartifactId={artifact_id}

 -Dversion={version} -Dpackaging={packaging}",
            "description": "Installs a file into the local Maven repository",
            "groupName": "Maven Repository Management",
            "variables": [
                {
                    "name": "file_path",
                    "description": "Path to the artifact file",
                    "default": ""
                },
                {
                    "name": "group_id",
                    "description": "Group ID for the artifact",
                    "default": ""
                },
                {
                    "name": "artifact_id",
                    "description": "Artifact ID for the artifact",
                    "default": ""
                },
                {
                    "name": "version",
                    "description": "Version of the artifact",
                    "default": ""
                },
                {
                    "name": "packaging",
                    "description": "Packaging type (e.g., jar, war)",
                    "default": "jar"
                }
            ]
        },
        {
            "name": "Execute Plugin Goal",
            "command": "mvn {plugin}:{goal}",
            "description": "Executes a specific plugin goal",
            "groupName": "Maven Plugin Management",
            "variables": [
                {
                    "name": "plugin",
                    "description": "Name of the plugin (e.g., maven-compiler-plugin)",
                    "default": ""
                },
                {
                    "name": "goal",
                    "description": "Goal to execute (e.g., compile)",
                    "default": ""
                }
            ]
        },
        {
            "name": "Update Plugin Versions",
            "command": "mvn versions:update-plugins",
            "description": "Updates plugin versions to the latest available",
            "groupName": "Maven Plugin Management",
            "variables": []
        },
        {
            "name": "Run Specific Lifecycle Phase",
            "command": "mvn {phase}",
            "description": "Runs a specific Maven lifecycle phase (e.g., validate, compile, test)",
            "groupName": "Maven Lifecycle Management",
            "variables": [
                {
                    "name": "phase",
                    "description": "Lifecycle phase to execute",
                    "default": ""
                }
            ]
        },
        {
            "name": "Generate Site Documentation",
            "command": "mvn site",
            "description": "Generates site documentation for the project",
            "groupName": "Maven Lifecycle Management",
            "variables": []
        },
        {
            "name": "Run Tests",
            "command": "mvn test",
            "description": "Runs unit tests in the project",
            "groupName": "Maven Testing Commands",
            "variables": []
        },
        {
            "name": "Run Single Test",
            "command": "mvn test -Dtest={test_class}",
            "description": "Runs a single test class",
            "groupName": "Maven Testing Commands",
            "variables": [
                {
                    "name": "test_class",
                    "description": "Name of the test class to run",
                    "default": ""
                }
            ]
        },
        {
            "name": "Skip Test Compilation",
            "command": "mvn install -Dmaven.test.skip=true",
            "description": "Skips test compilation and execution during build",
            "groupName": "Maven Testing Commands",
            "variables": []
        },
        {
            "name": "Create New Project",
            "command": "mvn archetype:generate -DgroupId={group_id} -DartifactId={artifact_id} -DarchetypeArtifactId={archetype_id} -DinteractiveMode=false",
            "description": "Creates a new project from a Maven archetype",
            "groupName": "Maven Archetype Commands",
            "variables": [
                {
                    "name": "group_id",
                    "description": "Group ID for the new project",
                    "default": ""
                },
                {
                    "name": "artifact_id",
                    "description": "Artifact ID for the new project",
                    "default": ""
                },
                {
                    "name": "archetype_id",
                    "description": "Archetype ID (e.g., maven-archetype-quickstart)",
                    "default": "maven-archetype-quickstart"
                }
            ]
        },
        {
            "name": "List Available Archetypes",
            "command": "mvn archetype:generate",
            "description": "Lists available archetypes interactively",
            "groupName": "Maven Archetype Commands",
            "variables": []
        },
        {
            "name": "Run Maven in Debug Mode",
            "command": "mvn -X {goal}",
            "description": "Runs Maven with debug output enabled",
            "groupName": "Maven Build Commands",
            "variables": [
                {
                    "name": "goal",
                    "description": "Maven goal to execute (e.g., install, package)",
                    "default": ""
                }
            ]
        },
        {
            "name": "Run Maven Offline",
            "command": "mvn -o {goal}",
            "description": "Runs Maven in offline mode, using only local repository",
            "groupName": "Maven Build Commands",
            "variables": [
                {
                    "name": "goal",
                    "description": "Maven goal to execute",
                    "default": ""
                }
            ]
        },
        {
            "name": "Set Maven Property",
            "command": "mvn -D{property}={value} {goal}",
            "description": "Sets a system property for the Maven build",
            "groupName": "Maven Build Commands",
            "variables": [
                {
                    "name": "property",
                    "description": "Name of the property to set",
                    "default": ""
                },
                {
                    "name": "value",
                    "description": "Value of the property",
                    "default": ""
                },
                {
                    "name": "goal",
                    "description": "Maven goal to execute",
                    "default": ""
                }
            ]
        },
        {
            "name": "Generate Dependency Report",
            "command": "mvn project-info-reports:dependencies",
            "description": "Generates a dependency report for the project",
            "groupName": "Maven Project Information",
            "variables": []
        },
        {
            "name": "Check for Outdated Dependencies",
            "command": "mvn versions:display-dependency-updates",
            "description": "Checks for newer versions of dependencies",
            "groupName": "Maven Dependency Management",
            "variables": []
        },
        {
            "name": "Check for Outdated Plugins",
            "command": "mvn versions:display-plugin-updates",
            "description": "Checks for newer versions of plugins",
            "groupName": "Maven Plugin Management",
            "variables": []
        },
        {
            "name": "Run Integration Tests",
            "command": "mvn verify",
            "description": "Runs integration tests for the project",
            "groupName": "Maven Testing Commands",
            "variables": []
        },
        {
            "name": "Clean and Package",
            "command": "mvn clean package",
            "description": "Cleans the project and packages the artifact",
            "groupName": "Maven Build Commands",
            "variables": []
        },
        {
            "name": "Update Project Version",
            "command": "mvn versions:set -DnewVersion={new_version}",
            "description": "Updates the project version in the POM file",
            "groupName": "Maven Project Information",
            "variables": [
                {
                    "name": "new_version",
                    "description": "New version for the project",
                    "default": ""
                }
            ]
        }
    ]
}
